import matplotlib.pyplot as plt



ddr_remote_fill_bw=[18.5939, 27.7912, 40.8321, 42.1819, 43.04, 33.2509, 38.4764, 40.7838, 42.7059, 43.111599999999996, 43.6858, 44.0615, 44.404, 44.4159, 44.448800000000006, 44.5764, 44.609, 44.6566, 44.6541, 34.96, 26.5635, 24.6387, 24.5232, 24.25, 21.6785, 13.1449, 8.074, 6.88, 6.616899999999999, 6.8502, 7.3573, 7.466600000000001]
ddr_local_fill_bw=[22.6148, 27.2658, 29.240099999999998, 30.3193, 30.7174, 23.940900000000003, 27.0042, 29.1155, 30.0947, 30.7593, 31.1737, 31.4374, 37.969, 39.7685, 44.3322, 44.348, 39.0736, 42.497699999999995, 44.6225, 34.708400000000005, 26.5401, 24.624599999999997, 24.5221, 24.2961, 23.4, 17.12, 11.1735, 9.2621, 8.7465, 8.6608, 8.642, 8.533100000000001]
cxl_local_fill_bw=[25.5461, 27.6606, 29.1571, 30.242, 31.019099999999998, 23.7387, 28.159599999999998, 29.110799999999998, 30.2938, 30.699900000000003, 31.1814, 31.419900000000002, 31.5916, 31.663400000000003, 31.6971, 31.770799999999998, 31.8504, 31.853099999999998, 31.8495, 26.441, 19.929299999999998, 24.633599999999998, 24.5068, 23.6373, 18.9025, 8.5665, 4.759399999999999, 4.171399999999999, 3.8456, 3.7300999999999997, 3.6746, 3.6471999999999998]

ddr_remote_copy_bw=[97.4755, 133.3344, 158.96079999999998, 215.57829999999998, 263.3817, 207.1155, 281.176, 318.4033, 333.32809999999995, 343.03990000000005, 124.04469999999999, 73.7415, 74.9376, 76.2086, 76.82339999999999, 77.5029, 77.3446, 77.5591, 44.2786, 37.0791, 30.4256, 28.887700000000002, 28.601200000000002, 28.1587, 28.0232, 27.6906, 22.152900000000002, 19.958299999999998, 18.3294, 16.6205, 14.2392, 14.3843]
ddr_local_copy_bw=[100.3028, 133.1772, 113.3385, 152.81310000000002, 186.96529999999998, 146.9365, 199.6079, 227.1975, 237.6962, 244.6795, 89.0509, 52.622, 74.85010000000001, 76.1815, 76.811, 77.5015, 77.35010000000001, 76.5165, 48.902300000000004, 37.276900000000005, 30.9473, 29.608900000000002, 29.5721, 29.493299999999998, 29.5684, 28.6195, 23.567700000000002, 21.8149, 20.8215, 20.4333, 20.1567, 20.334400000000002]
cxl_local_copy_bw=[96.60510000000001, 132.0106, 113.3355, 152.81310000000002, 186.5916, 147.54729999999998, 200.5493, 227.2456, 237.7488, 244.805, 89.3845, 52.5197, 53.4426, 54.3822, 54.837300000000006, 55.323, 55.2337, 55.357800000000005, 31.2438, 32.1601, 27.966099999999997, 28.4969, 28.3624, 27.8629, 27.0275, 24.559099999999997, 16.3009, 13.2815, 11.8483, 10.9225, 10.5901, 10.4949]

ddr_remote_daxpy_bw=[71.1276, 76.7315, 109.06830000000001, 111.3435, 112.8018, 94.2386, 101.3186, 106.9174, 108.69030000000001, 111.99889999999999, 98.1892, 83.47189999999999, 83.4559, 83.20439999999999, 83.3372, 83.5453, 83.6221, 83.6018, 61.1208, 40.4354, 39.248400000000004, 39.0069, 38.6932, 35.174800000000005, 24.1523, 17.189799999999998, 14.911, 14.6655, 14.7006, 14.7561, 14.6884, 14.6441]
ddr_local_daxpy_bw=[73.6869, 76.6657, 78.0997, 79.454, 80.4904, 66.7243, 72.5174, 76.4551, 78.2909, 79.8608, 69.55189999999999, 59.533300000000004, 83.1983, 83.2905, 83.35010000000001, 83.5269, 83.54939999999999, 82.603, 65.833, 39.844300000000004, 39.277300000000004, 39.090199999999996, 38.9345, 37.0019, 29.0336, 23.0212, 20.7153, 20.1088, 20.035400000000003, 19.988, 20.0084, 19.8445]
cxl_local_daxpy_bw=[72.3781, 76.66210000000001, 78.0883, 79.3385, 80.48230000000001, 66.83160000000001, 72.3846, 75.1688, 77.7204, 79.2185, 69.8331, 59.48, 59.4627, 59.4381, 59.5105, 59.6166, 59.6933, 59.7181, 43.792699999999996, 30.052, 29.2425, 38.293800000000005, 36.8841, 24.2126, 14.3985, 10.6447, 9.0655, 8.4415, 8.0325, 7.7522, 7.664899999999999, 7.5747]

ddr_remote_dot_bw=[64.0877, 70.67, 97.8129, 100.1461, 102.8193, 102.166, 102.80930000000001, 104.1905, 100.7372, 102.3365, 86.2955, 64.1262, 64.2014, 64.2843, 64.3017, 64.2635, 64.1972, 64.245, 44.6774, 28.8051, 27.8375, 27.7731, 27.628700000000002, 25.107, 18.3863, 16.063399999999998, 14.3366, 13.8976, 13.5805, 13.092, 12.1649, 12.1656]
ddr_local_dot_bw=[64.7369, 69.8925, 69.1431, 70.7817, 73.3205, 73.0335, 74.1764, 74.2825, 71.8901, 73.1152, 61.958800000000004, 45.743900000000004, 64.1688, 64.2968, 64.2979, 64.2385, 64.2087, 63.4641, 48.3059, 28.3113, 27.8178, 27.7445, 27.7596, 26.3168, 21.8855, 18.7956, 17.178099999999997, 16.784200000000002, 16.718799999999998, 16.653599999999997, 16.5868, 16.6109]
cxl_local_dot_bw=[63.3625, 69.6602, 70.4219, 71.0569, 72.9965, 73.3892, 73.7915, 74.1274, 72.5054, 73.1251, 61.974, 45.7644, 45.8449, 45.9122, 45.947900000000004, 45.872800000000005, 45.8483, 45.8597, 32.3845, 21.553900000000002, 20.9545, 27.7625, 27.1326, 17.7445, 10.8909, 8.0734, 6.9116, 6.4473, 6.158399999999999, 5.8617, 5.8173, 5.843100000000001]

sizes=[30, 48, 77, 123, 197, 315, 504, 806, 1290, 2063, 3302, 5283, 8454, 13528, 21647, 34639, 55428, 88694, 141925, 227102, 363400, 581498, 930489, 1488931, 2382526, 3812421, 6100481, 9761740, 15620338, 24995027, 39996021, 64000000]
# 绘制折线图
plt.figure(figsize=(20, 6))
plt.plot(range(1, len(sizes) + 1), ddr_local_fill_bw, marker='o', label='DDR Local',color='blue')
plt.plot(range(1, len(sizes) + 1), ddr_remote_fill_bw, marker='o', label='DDR Remote',color='green')
plt.plot(range(1, len(sizes) + 1), cxl_local_fill_bw, marker='o', label='CXL Local',color='red')
# 设置横坐标刻度和标签
plt.xticks(range(1, len(sizes) + 1, 3), sizes[::3])

# 设置横坐标刻度和标签
plt.xticks(range(1, len(sizes) + 1, 3), sizes[::3])

# 设置图例、标题和标签
plt.legend()
plt.title('Stream2 Fill Operation Bandwidth vs Size')
plt.xlabel('Size')
plt.ylabel('Bandwidth (GB/s)')

# 显示网格
plt.grid(True)

# 显示图形
# plt.show()
plt.savefig("stream2_fill.png")
plt.figure(figsize=(20,6))
plt.plot(range(1, len(sizes) + 1), ddr_local_copy_bw, marker='o', label='DDR Local',color='blue')
plt.plot(range(1, len(sizes) + 1), ddr_remote_copy_bw, marker='o', label='DDR Remote',color='green')
plt.plot(range(1, len(sizes) + 1), cxl_local_copy_bw, marker='o', label='CXL Local',color='red')

# 设置横坐标刻度和标签
plt.xticks(range(1, len(sizes) + 1, 3), sizes[::3])

# 设置横坐标刻度和标签
plt.xticks(range(1, len(sizes) + 1, 3), sizes[::3])

# 设置图例、标题和标签
plt.legend()
plt.title('Stream2 Copy Operation Bandwidth vs Size')
plt.xlabel('Size')
plt.ylabel('Bandwidth (GB/s)')

# 显示网格
plt.grid(True)

# 显示图形
# plt.show()
plt.savefig("stream2_copy.png")
plt.figure(figsize=(20,6))
plt.plot(range(1, len(sizes) + 1), ddr_local_daxpy_bw, marker='o', label='DDR Local',color='blue')
plt.plot(range(1, len(sizes) + 1), ddr_remote_daxpy_bw, marker='o', label='DDR Remote',color='green')
plt.plot(range(1, len(sizes) + 1), cxl_local_daxpy_bw, marker='o', label='CXL Local',color='red')
# 设置横坐标刻度和标签
plt.xticks(range(1, len(sizes) + 1, 3), sizes[::3])

# 设置图例、标题和标签
plt.legend()
plt.title('Stream2 Daxpy Operation Bandwidth vs Size')
plt.xlabel('Size')
plt.ylabel('Bandwidth (GB/s)')

# 显示网格
plt.grid(True)

# 显示图形
# plt.show()
plt.savefig("stream2_daxpy.png")
plt.figure(figsize=(20,6))
plt.plot(range(1, len(sizes) + 1), ddr_local_dot_bw, marker='o', label='DDR Local',color='blue')
plt.plot(range(1, len(sizes) + 1), ddr_remote_dot_bw, marker='o', label='DDR Remote',color='green')
plt.plot(range(1, len(sizes) + 1), cxl_local_dot_bw, marker='o', label='CXL Local',color='red')

# 设置横坐标刻度和标签
plt.xticks(range(1, len(sizes) + 1, 3), sizes[::3])

# 设置图例、标题和标签
plt.legend()
plt.title('Stream2 Dot Operation Bandwidth vs Size')
plt.xlabel('Size')
plt.ylabel('Bandwidth (GB/s)')

# 显示网格
plt.grid(True)

# 显示图形
# plt.show()
plt.savefig("stream2_dot.png")